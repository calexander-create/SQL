--Quantifying Customer and Order Data

--How many orders were placed in January?

select count(orderID)
from BIT_DB.JanSales;

--How many of those orders were for an iPhone?

select COUNT(orderid)
from BIT_DB.JanSales
where Product='iPhone'
and length(orderid) = 6
and orderid <> 'Order ID';

----Select the customer account numbers for all the orders that were placed in February.

select distinct customers.acctnum 
from BIT_DB.customers
join BIT_DB.FebSales
on BIT_DB.customers.order_id = BIT_DB.FebSales.orderID;

----Which product was the cheapest one sold in January, and what was the price?

select distinct Product, Min(price)
from BIT_DB.JanSales;

select distinct Product, price
from BIT_DB.JanSales
where price in (SELECT min(price) FROM BIT_DB.JanSales);

--What is the total revenue for each product sold in January?

select sum(quantity)*price as revenue, product
from BIT_DB.JanSales
group by product
order by sum(quantity)*price;

--Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?

select Product, sum(quantity), sum(quantity)*price
from BIT_DB.FebSales
where location = "548 Lincoln St, Seattle, WA 98101"
group by product;

select Product, quantity, sum(quantity)*price
from BIT_DB.FebSales
where location = "548 Lincoln St, Seattle, WA 98101"
group by product;

--How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?

select count(distinct customers.acctnum),  avg(quantity*price)
from FebSales
left join customers
on customers.order_id = FebSales.orderID

--List all the products sold in Los Angeles in February, and include how many of each were sold.

select Product, sum(Quantity)
from FebSales
where location like '%Los Angeles%'
group by Product;

where FebSales.Quantity > 2
and length(orderID) = 6
and orderID <> 'Order ID';
